{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\slack-connect\\\\slack-connect-frontend\\\\src\\\\components\\\\MessageForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../services/api';\nimport { formatISO } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst team_id = localStorage.getItem('team_id') || '';\nconst MessageForm = () => {\n  _s();\n  const [channels, setChannels] = useState([]);\n  const [channelId, setChannelId] = useState('');\n  const [text, setText] = useState('');\n  const [sendAt, setSendAt] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const team_id = localStorage.getItem('team_id') || '';\n    if (!team_id) {\n      console.error('Missing team_id in localStorage');\n      return;\n    }\n    const fetchChannels = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/channels?team_id=${team_id}`);\n        const data = await response.json();\n        if (data.channels) {\n          setChannels(data.channels);\n        } else {\n          console.error('Failed to load channels:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching channels:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChannels();\n  }, []);\n  const handleSend = async scheduled => {\n    if (!channelId || !text) return alert('Please fill all fields');\n    try {\n      setLoading(true);\n      const payload = {\n        team_id,\n        channel_id: channelId,\n        text,\n        ...(scheduled ? {\n          send_at: sendAt\n        } : {})\n      };\n      const endpoint = scheduled ? '/auth/schedule-message' : '/auth/send-message';\n      await API.post(endpoint, payload);\n      alert(scheduled ? 'Message scheduled!' : 'Message sent!');\n      setText('');\n      setSendAt('');\n    } catch (err) {\n      alert('Failed to send/schedule message');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send or Schedule Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Channel:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: channelId,\n        onChange: e => setChannelId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Channel --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), channels.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.id,\n          children: [\"#\", c.name]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Schedule Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: sendAt,\n        onChange: e => setSendAt(e.target.value),\n        min: formatISO(new Date()).slice(0, 16)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      onClick: () => handleSend(false),\n      children: \"Send Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading || !sendAt,\n      onClick: () => handleSend(true),\n      children: \"Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageForm, \"yldL7KtFn98G7E33rw6UXCZrl3s=\");\n_c = MessageForm;\nexport default MessageForm;\nvar _c;\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"names":["React","useEffect","useState","API","formatISO","jsxDEV","_jsxDEV","team_id","localStorage","getItem","MessageForm","_s","channels","setChannels","channelId","setChannelId","text","setText","sendAt","setSendAt","loading","setLoading","console","error","fetchChannels","response","fetch","data","json","handleSend","scheduled","alert","payload","channel_id","send_at","endpoint","post","err","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","c","id","name","type","min","Date","slice","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/slack-connect/slack-connect-frontend/src/components/MessageForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../services/api';\r\nimport { formatISO } from 'date-fns';\r\n\r\ninterface Channel {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nconst team_id = localStorage.getItem('team_id') || '';\r\n\r\nconst MessageForm = () => {\r\n  const [channels, setChannels] = useState<Channel[]>([]);\r\n  const [channelId, setChannelId] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [sendAt, setSendAt] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const team_id = localStorage.getItem('team_id') || '';\r\n\r\n    if (!team_id) {\r\n      console.error('Missing team_id in localStorage');\r\n      return;\r\n    }\r\n\r\n    const fetchChannels = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/channels?team_id=${team_id}`);\r\n        const data = await response.json();\r\n\r\n        if (data.channels) {\r\n          setChannels(data.channels);\r\n        } else {\r\n          console.error('Failed to load channels:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching channels:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChannels();\r\n  }, []);\r\n\r\n  const handleSend = async (scheduled: boolean) => {\r\n    if (!channelId || !text) return alert('Please fill all fields');\r\n\r\n    try {\r\n      setLoading(true);\r\n      const payload = {\r\n        team_id,\r\n        channel_id: channelId,\r\n        text,\r\n        ...(scheduled ? { send_at: sendAt } : {}),\r\n      };\r\n\r\n      const endpoint = scheduled ? '/auth/schedule-message' : '/auth/send-message';\r\n\r\n      await API.post(endpoint, payload);\r\n      alert(scheduled ? 'Message scheduled!' : 'Message sent!');\r\n      setText('');\r\n      setSendAt('');\r\n    } catch (err) {\r\n      alert('Failed to send/schedule message');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Send or Schedule Message</h2>\r\n\r\n      <label>\r\n        Channel:\r\n        <select value={channelId} onChange={(e) => setChannelId(e.target.value)}>\r\n          <option value=\"\">-- Select Channel --</option>\r\n          {channels.map((c) => (\r\n            <option key={c.id} value={c.id}>\r\n              #{c.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <br />\r\n\r\n      <label>\r\n        Message:\r\n        <textarea value={text} onChange={(e) => setText(e.target.value)} />\r\n      </label>\r\n\r\n      <br />\r\n\r\n      <label>\r\n        Schedule Time:\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={sendAt}\r\n          onChange={(e) => setSendAt(e.target.value)}\r\n          min={formatISO(new Date()).slice(0, 16)}\r\n        />\r\n      </label>\r\n\r\n      <br />\r\n\r\n      <button disabled={loading} onClick={() => handleSend(false)}>\r\n        Send Now\r\n      </button>\r\n      <button disabled={loading || !sendAt} onClick={() => handleSend(true)}>\r\n        Schedule\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}